[metadata]
name = odl
version = file: odl/VERSION
description = Operator Discretization Library
long_description = file: README.md
long_description_content_type = text/markdown
author = Jonas Adler, Holger Kohr, and the ODL Contributors
author_email = odl@math.kth.se
license = MPL-2.0
license_file = LICENSE
url = https://github.com/odlgroup/odl
download_url = https://github.com/odlgroup/odl/archive/master.zip
platforms = any
keywords = research, development, mathematics, prototyping, imaging, tomography
# See https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Education
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Software Development
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Operating System :: OS Independent

[options]
packages = find:
install_requires =
    setuptools >=39.2.0
    future >=0.14
    packaging >=15.0
    numpy >=1.10,!=1.14.0,!=1.14.1,!=1.14.2
    scipy >=0.14
python_requires = >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*
tests_require =
    pytest >=3.0.3
    coverage >=4.0
    coveralls
include_package_data = True

[options.packages.find]
exclude =
    doc
    examples

[options.package_data]
tests = odl/test, odl/pytest.ini

[options.extras_require]
testing =
    pytest >=3.0.3
    coverage >=4.0
    coveralls
all =
    pytest >=3.0.3
    coverage >=4.0
    coveralls
    matplotlib
    pyfftw
    pywavelets >= 1.0.1
    scikit-image


[options.entry_points]
pytest11 = odl_plugins=odl.util.pytest_config

[bdist_wheel]
universal = 1

[tool:pytest]
minversion = 3.0.3
markers = not benchmark and not largescale
testpaths = odl
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS
addopts = --doctest-modules
xfail_strict=true

[tool:isort]
# Options: https://github.com/timothycrosley/isort#configuring-isort
line_length = 79
multi_line_output = 4

[tool:pycodestyle]
ignore = E402, E741, W503, W504
max-line-length = 79
statistics = True
exclude =
    .git
    __init__.py

[tool:flake8]
# Options: http://flake8.pycqa.org/en/latest/user/configuration.html
# Error codes: http://flake8.pycqa.org/en/latest/user/error-codes.html
max-line-length = 79
exclude =
    .git
    __pycache__

[coverage:run]
branch = False
include =
    odl/*
omit =
    */__init__.py
    odl/test/*
    odl/diagnostics/*
    odl/space/entry_points.py
    odl/util/graphics.py
    odl/util/npy_compat.py
    odl/util/pytest_config.py
    odl/util/testutils.py

    # Omit until we add ASTRA to our CI pipelines
    odl/tomo/operators/ray_trafo.py
    odl/tomo/backends/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    assert False
    raise AssertionError
    raise NotImplementedError
    return NotImplemented

    # Skip imports and __all__
    import *
    __all__

    # Don't complain if non-runnable code isn't run:
    if 0:
    if False:
    if __name__ == '__main__':

ignore_errors = True

[coverage:html]
directory = htmlcov

